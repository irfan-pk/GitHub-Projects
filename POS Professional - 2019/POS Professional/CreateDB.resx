<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="MenuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAH+AAAB/4AAA//wAB//////
</value>
  </data>
</root>