<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AA/8AAAf/4AA////////////
</value>
  </data>
</root>